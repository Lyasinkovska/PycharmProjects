type: edu
custom_name: stage5
files:
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import StageTest
    from hstest.test_case import TestCase
    from hstest.check_result import CheckResult

    import sys
    if sys.platform.startswith("win"):
        import _locale
        # pylint: disable=protected-access
        _locale._getdefaultlocale = (lambda *args: ['en_US', 'utf8'])

    CheckResult.correct = lambda: CheckResult(True, '')
    CheckResult.wrong = lambda feedback: CheckResult(False, feedback)


    class TranslatorTest(StageTest):
        def generate(self):
            return [TestCase(stdin='3\n0\nhello')]

        def check(self, reply, attach):
            reply = reply.lower()
            if not ('arabic translations' in reply
                    and 'arabic examples' in reply
                    and 'russian examples' in reply
                    and 'russian translations' in reply):
                return CheckResult.wrong('Try to print out translations and examples of all available languages. ')

            with open('hello.txt') as file:
                output = file.read().lower()
                if ('spanish translation' in output
                        and 'spanish example' in output
                        and 'turkish example' in output):
                    return CheckResult.correct()

            return CheckResult.wrong(
                'Try to write all translations and examples into the output file '
                'and name it WORD.txt where WORD is word you want to translate.')


    if __name__ == '__main__':
        TranslatorTest('translator.translator').run_tests()
  learner_created: false
- name: translator/translator.py
  visible: true
  text: |
    print('Hello, World!')
  learner_created: false
feedback_link: https://hyperskill.org/projects/99/stages/547/implement
status: Unchecked
record: -1
